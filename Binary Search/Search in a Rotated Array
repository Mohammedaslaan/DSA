https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array4618/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    int search(int A[], int l, int h, int key){
        // l: The starting index
        // h: The ending index, you have to search the key in this range
        bool right = false;
        if(key < A[0]){
            //right me search krna hai
            right = true;
        }
        int s= l;
        int e = h;
        int mid = s + (e-s)/2;
        
        while(s<=e){
            int element = A[mid];
            if(key == element){
                return mid;
            }
            if(element>=A[0] && right ==false){
                //mid left pe hai and search bhi left me krna hai
                if(element >key){
                    e = mid-1;
                }else{
                    s= mid+1;
                }
            }else if(element>=A[0] && right ==true){
                //mid left me hai lekin search right me krna hai
                s = mid +1;
            }else if(element <A[0] && right ==false){
                //mid right me hai aur search left me krna hai
                e = mid -1;
            }else if(element <A[0] && right ==true){
                //mid right me hai aur search right me krna hai
                if(element >key ){
                    e = mid-1;
                }else{
                    s = mid+1;
                }
            }
            mid = s + (e-s)/2;
        }
        return -1;
        //complete the function here
    }
};

//{ Driver Code Starts. 
int main() {
    int t;
    cin >> t;
    while(t--){
        int n;
        cin >> n;
        int A[n];
        for(int i = 0; i < n; i++)
            cin >> A[i];
        int key;
        cin >> key;
        Solution ob;
        cout << ob.search(A, 0, n - 1, key) << endl;
    }
return 0;
}
// } Driver Code Ends
