#include <iostream>
#include <bits/stdc++.h> 
using namespace std;
int SquareRootBase(int n){
    long long int s = 1;
    long long int e = n;
    long long int mid = s + (e-s)/2;
    while(s<=e){
        if(mid*mid == n){
            return mid;
        }
        if(mid*mid > n){
            e = mid-1;
        }else{
            s = mid +1;
        }
        mid = s + (e-s)/2;
    }
    return e;
}
double SquareRootPrecision(int n,int prec){
    long long int s = 1;
    long long int e = n;
    long long int mid = s + (e-s)/2;
    int ans = 0;
    while(s<=e){
        if(mid*mid == n){
            ans =  mid;
            break;
        }
        if(mid*mid > n){
            e = mid-1;
        }else{
            ans = mid;
            s = mid +1;
        }
        mid = s + (e-s)/2;
    }
    cout<<ans<<endl;
    double finalans = ans;
    double step = 0.1;
    for(int i = 1 ; i<= prec ; i++){
        
        for(double j = finalans ; j*j<=n ; j = j +step){
            finalans = j;
        }
        step = step /10;
    }
    return finalans;
}
int main(){
    cout<<SquareRootPrecision(50,10);

    return 0;
}
