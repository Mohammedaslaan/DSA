#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

vector<int> factorial(int N){
        vector<int> ans ={1};
        
        for(int num = 2 ; num<=N ; num++){
            vector<int> minians;
            int carry = 0;
            cout<<"num->"<<num<<" ";
            for(int i = ans.size()-1 ; i>=0 ; i--){
                int mulans = ans[i] * num + carry;
                cout<<"mulans->"<<mulans<<" ";
                int digit = mulans % 10;
                carry = mulans /10;
                cout<<"digit->"<<digit<<" "<<"carry->"<<carry<<endl;
                minians.emplace_back(digit);
            }
            while(carry){
                minians.emplace_back(carry % 10);
                carry = carry/10;
            }
            reverse(minians.begin(),minians.end());
            for(auto i : minians){
                cout<<i;
            }cout<<endl;
            ans = minians;
        }
        return ans;
    }
int main(){

    vector<int> ans = factorial(1000);
    for( auto i : ans){
        cout<<i<<" ";
    }

    // int a[]  = {3,2,6,7};
    // int b[] = {1,3,4};

    // int n = 4;
    // int m = 3;

    // vector<string> Strings;
    
    // for(int i = m-1 ; i>=0 ; i--){
    //     int num = b[i];
    //     int carry = 0;
    //     int j = n-1;
    //     int numzero = m-1 -i ;
    //     string ansString = "";
    //     while(numzero){
    //         ansString.push_back(0 +'0');
    //         numzero--;
    //     }
    //     while(j>=0){
    //         int mulans = a[j--] * num + carry;
    //         cout<<"mulans "<<mulans<<" ";
    //         int digit = mulans % 10;
    //         carry = mulans / 10;
    //         cout<<"digit "<<digit<<"carry "<<carry<<endl;
    //         ansString.push_back(digit +'0');
    //     }
    //     cout<<ansString<<endl;
    //     Strings.emplace_back(ansString);
    // }




 
   
}
