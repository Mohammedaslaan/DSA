class Solution {
public:
    int countSubstrings(string s) {
        if(s.length() == 1){return 1;}
        int count = 0;
        for(int i = 0 ; i<s.length() ; i++){
            int right = i;
            int left = i;
            while(right>=0 && left< s.length() && s[right] == s[left]){
                right--;
                left++;
                count++;
            }
        }

        for(int i = 0 ; i<s.length() ; i++){
            int right = i;
            int left = right + 1;
            while(right>=0 && left< s.length() && s[right] == s[left]){
                right--;
                left++;
                count++;
            }

        }
        return count;
        
    }
};



-------------------------------------------------------
class Solution {
public:
bool checkPalindrome(string s){
    int i = 0;
    int e = s.length()-1;
    while(i<=e){
        if(s[i] != s[e]){
            return false;
        }else{
            i++;
            e--;
        }
    }
    return true;
}
    int countSubstrings(string s) {
        int count = 0;
        for(int i = 0 ; i< s.length() ; i++){
            int number = 0;
            for(int j = i + 1 ; j < s.length() ; j++){
                number++;
            }
            number = number + 1;
            for(int j = 1 ; j<= number ; j++){
                string subb = s.substr(i,j);
                //cout<<subb<<endl;
                if(checkPalindrome(subb)){
                    count++;
                }
            }
            
        }
        return count;
    }
};
